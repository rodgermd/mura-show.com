<?php

namespace Rodger\GalleryBundle\Entity;

use Doctrine\ORM\EntityRepository;
use FOS\UserBundle\Model\UserInterface;

/**
 * TagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagRepository extends EntityRepository
{
  /**
   * Searches Tags like givem
   * @param string $name
   * @return array - Tags
   */
  public function search($name)
  {
    $name = strtolower($name);
    $qb = $this->createQueryBuilder('t');
    return $qb
            ->select('t')
            ->where($qb->expr()->like('t.name', $qb->expr()->literal($name . '%')))
            ->getQuery()
            ->getResult();
  }
  
  /**
   * Gets existing or creates new Tag
   * @return Tag
   */
  public function getOrCreate($name) {
    $name = trim(strtolower($name));
    $tag = $this->find($name);
    if (!$tag) {
      $tag = new Tag();
      $tag->setName($name);
      $this->_em->persist($tag);
    }
    
    return $tag;
  }
  
  /**
   * Gets Tags using filtes
   * @param integer $year
   * @param array $use_tags
   * @param UserInterface $user
   * @return array 
   */
  public function getFilteredAlbumsTags($user, $year = null, array $use_tags = array()) {
    $qb = $this->createQueryBuilder('t')
            ->select('t')
            ->innerJoin('t.Albums', 'a')
            ->innerJoin('a.Images', 'i')
            ->orderBy('t.name');
    if (count($use_tags))
    {
      $albums = $this->_em->getRepository('RodgerGalleryBundle:Album')->getAlbumsIdUsingTags($user, $use_tags, $year);
      if ($albums) $qb->where($qb->expr()->in('a.id', $albums));
    }
    
    if ($year) {
      $qb->andWhere($qb->expr()->eq('i.year', $year));
    }
    
    if (!$user) {
      $qb->andWhere('i.is_private = false AND a.is_private = false');
    }
    
    return $qb->getQuery()->execute();
  }
}